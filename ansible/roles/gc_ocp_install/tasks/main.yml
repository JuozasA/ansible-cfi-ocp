---
# tasks file for gc_ocp_install

- name: Create the VM
  debug:
    msg:  "test"

- name: Downloading OCP4 Installer
  get_url:
    url: "{{ ocp_installer }}"
    dest: /tmp/openshift-install-linux.tar.gz
    mode: '0644'
    force: true
 
- name: Downloading OCP4 client
  get_url:
    url: "{{ ocp_client }}"
    dest: /tmp/openshift-client-linux.tar.gz
    mode: '0644'
    force: true
 
- name: Unarchiving OCP4 Installer
  unarchive:
    src: /tmp/openshift-install-linux.tar.gz
    dest: /usr/local/bin
    remote_src: yes
 
- name: Unarchiving OCP4 client
  unarchive:
    src: /tmp/openshift-client-linux.tar.gz
    dest: /usr/local/bin
    remote_src: yes
 
- name: Removing README files
  file:
    path: /usr/local/bin/README.md
    state: absent
 
- name: Create installation directory
  file:
    path: "/tmp/ocp-install-ocp"
    state: directory
 
- name: Render install-config template
  template:
    src: templates/install-config.yaml.j2
    dest: "/tmp/ocp-install-ocp/install-config.yaml"
 
- name: Deploy cluster
  command: openshift-install create cluster --dir=/tmp/ocp-install-ocp --log-level=debug
  async: 3600
  poll: 0
 
- name: Wait for bootstrapping to finish
  shell: tail -n 200 /tmp/ocp-install-ocp/.openshift_install.log
  register: result
  until: result.stdout.find("Bootstrap status") != -1
  retries: 200
  delay: 10
 
- name: Wait for installation to finish
  shell: tail -n 100 /tmp/ocp-install-ocp/.openshift_install.log
  register: result
  until: result.stdout.find("Install complete!") != -1
  retries: 300
  delay: 10

- name: Remove VM after installer
  debug:
    msg:  "test"

- name: Remove object store 
  debug:
    msg:  "test"